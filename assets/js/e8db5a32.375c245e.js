"use strict";(self.webpackChunkstandards_cyber_tamus_edu=self.webpackChunkstandards_cyber_tamus_edu||[]).push([[6327],{80140:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=t(74848),s=t(28453);const o={custom_edit_url:"https://github.com/tamus-cyber/standards.cyber.tamus.edu/tree/main/static/content/tamus.edu/TAMUS_profile.xml",toc_min_heading_level:2,toc_max_heading_level:2,title:"SA-10 Developer Configuration Management",description:""},i="SA-10 Developer Configuration Management {#sa-10}",a={id:"catalog/sa/sa-10",title:"SA-10 Developer Configuration Management",description:"",source:"@site/docs/catalog/sa/sa-10.md",sourceDirName:"catalog/sa",slug:"/catalog/sa/sa-10",permalink:"/catalog/sa/sa-10",draft:!1,unlisted:!1,editUrl:"https://github.com/tamus-cyber/standards.cyber.tamus.edu/tree/main/static/content/tamus.edu/TAMUS_profile.xml",tags:[],version:"current",frontMatter:{custom_edit_url:"https://github.com/tamus-cyber/standards.cyber.tamus.edu/tree/main/static/content/tamus.edu/TAMUS_profile.xml",toc_min_heading_level:2,toc_max_heading_level:2,title:"SA-10 Developer Configuration Management",description:""},sidebar:"catalogSidebar",previous:{title:"SA-9 External System Services",permalink:"/catalog/sa/sa-09"},next:{title:"SA-11 Developer Testing and Evaluation",permalink:"/catalog/sa/sa-11"}},c={},d=[{value:"Control",id:"control",level:3},{value:"Texas DIR Implementation Statement",id:"texas-dir-implementation-statement",level:3},{value:"SA-10(1) Software and Firmware Integrity Verification",id:"sa-10.01",level:2},{value:"Control",id:"control-1",level:3},{value:"SA-10(2) Alternative Configuration Management Processes",id:"sa-10.02",level:2},{value:"Control",id:"control-2",level:3},{value:"SA-10(3) Hardware Integrity Verification",id:"sa-10.03",level:2},{value:"Control",id:"control-3",level:3},{value:"SA-10(4) Trusted Generation",id:"sa-10.04",level:2},{value:"Control",id:"control-4",level:3},{value:"SA-10(5) Mapping Integrity for Version Control",id:"sa-10.05",level:2},{value:"Control",id:"control-5",level:3},{value:"SA-10(6) Trusted Distribution",id:"sa-10.06",level:2},{value:"Control",id:"control-6",level:3},{value:"SA-10(7) Security and Privacy Representatives",id:"sa-10.07",level:2},{value:"Control",id:"control-7",level:3}];function l(e){const n={br:"br",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,s.R)(),...e.components},{Details:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"sa-10",children:"SA-10 Developer Configuration Management"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Implementation Level"})}),": Organization",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Contributes to Assurance"})}),": Yes",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Texas DIR Baseline"})}),": MODERATE",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Texas DIR Required By"})}),": 2023-07-20"]}),"\n",(0,r.jsx)(n.h3,{id:"control",children:"Control"}),"\n",(0,r.jsxs)(n.p,{children:["a. Perform configuration management during system, component, or service ",(0,r.jsxs)("strong",{children:["                     ",(0,r.jsx)("em",{children:"[Selection (one or more): design; development; implementation; operation; disposal]"}),"                  "]}),";"]}),"\n",(0,r.jsxs)(n.p,{children:["b. Document, manage, and control the integrity of changes to ",(0,r.jsxs)("strong",{children:["                     ",(0,r.jsx)("em",{children:"[Assignment: configuration items]"}),"                  "]}),";"]}),"\n",(0,r.jsx)(n.p,{children:"c. Implement only organization-approved changes to the system, component, or service;"}),"\n",(0,r.jsx)(n.p,{children:"d. Document approved changes to the system, component, or service and the potential security and privacy impacts of such changes; and"}),"\n",(0,r.jsxs)(n.p,{children:["e. Track security flaws and flaw resolution within the system, component, or service and report findings to ",(0,r.jsxs)("strong",{children:["                     ",(0,r.jsx)("em",{children:"[Assignment: personnel]"}),"                  "]}),"."]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"Organizations consider the quality and completeness of configuration management activities conducted by developers as direct evidence of applying effective security controls. Controls include protecting the master copies of material used to generate security-relevant portions of the system hardware, software, and firmware from unauthorized modification or destruction. Maintaining the integrity of changes to the system, system component, or system service requires strict configuration control throughout the system development life cycle to track authorized changes and prevent unauthorized changes."})]}),"\n",(0,r.jsx)(n.h3,{id:"texas-dir-implementation-statement",children:"Texas DIR Implementation Statement"}),"\n",(0,r.jsx)("prop",{xmlns:"http://csrc.nist.gov/ns/oscal/1.0",name:"status",value:"withdrawn",children:(0,r.jsx)("em",{children:"[Withdrawn.]"})}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.01",children:"SA-10(1) Software and Firmware Integrity Verification"}),"\n",(0,r.jsx)(n.h3,{id:"control-1",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Require the developer of the system, system component, or system service to enable integrity verification of software and firmware components."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"Software and firmware integrity verification allows organizations to detect unauthorized changes to software and firmware components using developer-provided tools, techniques, and mechanisms. The integrity checking mechanisms can also address counterfeiting of software and firmware components. Organizations verify the integrity of software and firmware components, for example, through secure one-way hashes provided by developers. Delivered software and firmware components also include any updates to such components."})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.02",children:"SA-10(2) Alternative Configuration Management Processes"}),"\n",(0,r.jsx)(n.h3,{id:"control-2",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Provide an alternate configuration management process using organizational personnel in the absence of a dedicated developer configuration management team."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"Alternate configuration management processes may be required when organizations use commercial off-the-shelf information technology products. Alternate configuration management processes include organizational personnel who review and approve proposed changes to systems, system components, and system services and conduct security and privacy impact analyses prior to the implementation of changes to systems, components, or services."})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.03",children:"SA-10(3) Hardware Integrity Verification"}),"\n",(0,r.jsx)(n.h3,{id:"control-3",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Require the developer of the system, system component, or system service to enable integrity verification of hardware components."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"Hardware integrity verification allows organizations to detect unauthorized changes to hardware components using developer-provided tools, techniques, methods, and mechanisms. Organizations may verify the integrity of hardware components with hard-to-copy labels, verifiable serial numbers provided by developers, and by requiring the use of anti-tamper technologies. Delivered hardware components also include hardware and firmware updates to such components."})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.04",children:"SA-10(4) Trusted Generation"}),"\n",(0,r.jsx)(n.h3,{id:"control-4",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Require the developer of the system, system component, or system service to employ tools for comparing newly generated versions of security-relevant hardware descriptions, source code, and object code with previous versions."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsxs)(n.p,{children:["The trusted generation of descriptions, source code, and object code addresses authorized changes to hardware, software, and firmware components between versions during development. The focus is on the efficacy of the configuration management process by the developer to ensure that newly generated versions of security-relevant hardware descriptions, source code, and object code continue to enforce the security policy for the system, system component, or system service. In contrast, ",(0,r.jsx)("a",{xmlns:"http://csrc.nist.gov/ns/oscal/1.0",href:"#sa-10.1",children:"SA-10(1)"})," and ",(0,r.jsx)("a",{xmlns:"http://csrc.nist.gov/ns/oscal/1.0",href:"#sa-10.3",children:"SA-10(3)"})," allow organizations to detect unauthorized changes to hardware, software, and firmware components using tools, techniques, or mechanisms provided by developers."]})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.05",children:"SA-10(5) Mapping Integrity for Version Control"}),"\n",(0,r.jsx)(n.h3,{id:"control-5",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Require the developer of the system, system component, or system service to maintain the integrity of the mapping between the master build data describing the current version of security-relevant hardware, software, and firmware and the on-site master copy of the data for the current version."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"Mapping integrity for version control addresses changes to hardware, software, and firmware components during both initial development and system development life cycle updates. Maintaining the integrity between the master copies of security-relevant hardware, software, and firmware (including designs, hardware drawings, source code) and the equivalent data in master copies in operational environments is essential to ensuring the availability of organizational systems that support critical mission and business functions."})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.06",children:"SA-10(6) Trusted Distribution"}),"\n",(0,r.jsx)(n.h3,{id:"control-6",children:"Control"}),"\n",(0,r.jsx)(n.p,{children:"Require the developer of the system, system component, or system service to execute procedures for ensuring that security-relevant hardware, software, and firmware updates distributed to the organization are exactly as specified by the master copies."}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsx)(n.p,{children:"The trusted distribution of security-relevant hardware, software, and firmware updates help to ensure that the updates are correct representations of the master copies maintained by the developer and have not been tampered with during distribution."})]}),"\n",(0,r.jsx)(n.h2,{id:"sa-10.07",children:"SA-10(7) Security and Privacy Representatives"}),"\n",(0,r.jsx)(n.h3,{id:"control-7",children:"Control"}),"\n",(0,r.jsxs)(n.p,{children:["Require ",(0,r.jsxs)("strong",{children:["                     ",(0,r.jsx)("em",{children:"[Assignment: organization-defined security and privacy representatives]"}),"                  "]})," to be included in the ",(0,r.jsxs)("strong",{children:["                     ",(0,r.jsx)("em",{children:"[Assignment: organization-defined configuration change management and control process]"}),"                  "]}),"."]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Supplemental Guidance"}),(0,r.jsxs)(n.p,{children:["Information security and privacy representatives can include system security officers, senior agency information security officers, senior agency officials for privacy, and system privacy officers. Representation by personnel with information security and privacy expertise is important because changes to system configurations can have unintended side effects, some of which may be security- or privacy-relevant. Detecting such changes early in the process can help avoid unintended, negative consequences that could ultimately affect the security and privacy posture of systems. The configuration change management and control process in this control enhancement refers to the change management and control process defined by organizations in ",(0,r.jsx)("a",{xmlns:"http://csrc.nist.gov/ns/oscal/1.0",href:"#sa-10_smt.b",children:"SA-10b"}),"."]})]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(96540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);